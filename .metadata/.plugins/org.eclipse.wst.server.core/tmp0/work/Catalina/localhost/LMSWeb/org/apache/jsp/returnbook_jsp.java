/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.14
 * Generated at: 2017-05-02 16:47:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.gcit.lms.entity.Branch;
import com.gcit.lms.entity.Book;
import com.gcit.lms.entity.Borrower;
import com.gcit.lms.service.AdminService;
import com.gcit.lms.service.LibrarianService;

public final class returnbook_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.gcit.lms.entity.Borrower");
    _jspx_imports_classes.add("com.gcit.lms.service.AdminService");
    _jspx_imports_classes.add("com.gcit.lms.entity.Branch");
    _jspx_imports_classes.add("com.gcit.lms.entity.Book");
    _jspx_imports_classes.add("com.gcit.lms.service.LibrarianService");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

	AdminService service = new AdminService();
	LibrarianService iservice = new LibrarianService();
	Integer branchId = Integer.parseInt(request.getParameter("branchId"));
	Integer bookId = Integer.parseInt(request.getParameter("bookId"));
	Integer cardNo = Integer.parseInt(request.getParameter("cardNo"));
	String dueDate = request.getParameter("dueDate");
	
	Branch branch = service.getBranchByPk(branchId);
	Book book = service.getBookByPk(bookId);
	Borrower borrower = service.getBorrowerByPk(cardNo);
	System.out.println(dueDate);

      out.write("\n");
      out.write("<div>\n");
      out.write("\t<div class=\"modal-header\">\n");
      out.write("\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n");
      out.write("\t\t\taria-label=\"Close\">\n");
      out.write("\t\t\t<span aria-hidden=\"true\">&times;</span>\n");
      out.write("\t\t</button>\n");
      out.write("\t\t<h4 class=\"modal-title\">Return book</h4>\n");
      out.write("\t</div>\n");
      out.write("\t<form action=\"returningBook\" method=\"post\">\n");
      out.write("\t\t<div class=\"modal-body\">\n");
      out.write("\t\t\t<p>");
      out.print(borrower.getName());
      out.write("\n");
      out.write("\t\t\t\tis return book titled:\n");
      out.write("\t\t\t\t");
      out.print(book.getTitle());
      out.write("\n");
      out.write("\t\t\t\tto the library branch:\n");
      out.write("\t\t\t\t");
      out.print(branch.getBranchName());
      out.write("</p>\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"branchId\" value=\"");
      out.print(branchId);
      out.write("\"> \n");
      out.write("\t\t\t<input type=\"hidden\" name=\"bookId\" value=\"");
      out.print(bookId);
      out.write("\"> \n");
      out.write("\t\t\t<input type=\"hidden\" name=\"cardNo\" value=\"");
      out.print(cardNo);
      out.write("\">\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"dueDate\" value=\"");
      out.print(dueDate);
      out.write("\">\n");
      out.write("\t\t\t\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div class=\"modal-footer\">\n");
      out.write("\t\t\t<button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n");
      out.write("\t\t\t<button type=\"submit\" class=\"btn btn-primary\">Return book</button>\n");
      out.write("\t\t</div>\n");
      out.write("\t</form>\n");
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
