package com.gcit.lms.dao;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.gcit.lms.entity.BookLoans;

public class BookLoanDAO extends BaseDAO{
	
	public BookLoanDAO(Connection conn) {
		super(conn);
	}

	public void addBookLoans(BookLoans loans) throws ClassNotFoundException, SQLException{
		save("insert into tbl_book_loans (cardNo,bookId,branchId,dateOut,dueDate,dateIn) values(?,?,?,now(),DATE_ADD(NOW(), INTERVAL 7 DAY),null)",
				new Object[] {loan.getNoOfCard(),loans.getBookId(),loans.getBranchId()});
	}
	
	public void updateBookLoanDateIn(BookLoans loans) throws ClassNotFoundException, SQLException{
		save("update tbl_Book_loans set dateIn = now() where cardNo = ? and bookId = ? and branchId = ? and dateOut = ?", 
				new Object[]{loans.getCardNo(),loans.getBookId(),loans.getBranchId(),loans.getDateOut()});
	}
	
	public void updateBookLoanExtend(BookLoans loans) throws ClassNotFoundException, SQLException{
		save("update tbl_Book_loans set dueDate = DATE_ADD(NOW(), INTERVAL 7 DAY)"
				+ " where cardNo = ? and bookId = ? and branchId = ? and dateOut = ?", 
				new Object[]{loans.getCardNo(),loans.getBookId(),loans.getBranchId(),loans.getDateOut()});
	}
	
	public List<BookLoans> readAllBookLoans(Integer pageNo) throws ClassNotFoundException, SQLException{
		setPageNo(pageNo);
		return read("select * from tbl_Book_loans", null);
	}
	
	public List<BookLoans> readAllBookLoans() throws ClassNotFoundException, SQLException{
		return readAll("select * from tbl_BookLoans", null);
	}
	
	public BookLoans readBookLoansByID(Integer cardNo) throws ClassNotFoundException, SQLException{
		List<BookLoans> loans = read("select * from tbl_book_loans where cardNo = ? and dateIn is null", new Object[]{cardNo});
		if(loans!=null && !loans.isEmpty()){
			return loans.get(0);
		}
		return null;
	}
	
	public List<BookLoans> readBookLoansByCardNo(Integer cardNo) throws ClassNotFoundException, SQLException{
		List<BookLoans> loans = read("select * from tbl_book_loans where cardNo = ?", new Object[]{cardNo});
		return loans;
	}
	
	public Integer getBookLoansCount() throws ClassNotFoundException, SQLException{
		return readCount("select count(*) as COUNT from tbl_book_loans", null);
	}

	@Override
	public List<BookLoans> extractData(ResultSet rs) throws SQLException, ClassNotFoundException {
		BookDAO bdao = new BookDAO(conn);
		List<BookLoans> loans = new ArrayList<>();
		while(rs.next()){
			BookLoans a = new BookLoans();
			a.setBookId(rs.getInt("bookId"));
			a.setBranchId(rs.getInt("branchId"));
			a.setCardNo(rs.getInt("cardNo"));
			a.setDateIn(rs.getString("dateIn"));
			a.setDateOut(rs.getString("dateOut"));
			a.setDueDate(rs.getString("dueDate"));
			//a.setBooks(bdao.readFirstLevel("select * from tbl_book where bookId IN (Select bookId from tbl_book_book_loans where cardNo = ?)", new Object[]{a.getCardNo()}));
			loans.add(a);
		}
		return loans;
	}

	@Override
	public List extractDataFirstLevel(ResultSet rs) throws SQLException, ClassNotFoundException {
		List<BookLoans> loans = new ArrayList<>();
		while(rs.next()){
			BookLoans a = new BookLoans();
			a.setBookId(rs.getInt("bookId"));
			a.setBranchId(rs.getInt("branchId"));
			a.setCardNo(rs.getInt("cardNo"));
			a.setDateIn(rs.getString("dateIn"));
			a.setDateOut(rs.getString("dateOut"));
			a.setDueDate(rs.getString("dueDate"));
			
			loans.add(a);
		}
		return loans;
	}
}
